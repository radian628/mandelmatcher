{
  "version": 3,
  "sources": ["../src/gl-lib.ts", "../src/levels.ts", "../src/index.ts"],
  "sourcesContent": ["export function createShader(\r\n  gl: WebGL2RenderingContext,\r\n  source: string,\r\n  type: GLenum\r\n): WebGLShader | undefined {\r\n  // see if we can create the shader\r\n  const shader = gl.createShader(type);\r\n  if (!shader) return undefined;\r\n\r\n  // see if we can compile it\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    console.log(gl.getShaderInfoLog(shader));\r\n    return;\r\n  }\r\n\r\n  // return the program\r\n  return shader;\r\n}\r\n\r\nexport type CreateProgramError =\r\n  | {\r\n      type: \"failed-to-create-program\";\r\n    }\r\n  | {\r\n      type: \"failed-to-link-program\";\r\n      infoLog?: string;\r\n    };\r\n\r\nexport function createProgram(\r\n  gl: WebGL2RenderingContext,\r\n  vertex: WebGLShader,\r\n  fragment: WebGLShader\r\n): WebGLProgram | undefined {\r\n  // can we make the program?\r\n  const prog = gl.createProgram();\r\n  if (!prog) return undefined;\r\n\r\n  // can we attach the shaders and link it?\r\n  gl.attachShader(prog, vertex);\r\n  gl.attachShader(prog, fragment);\r\n  gl.linkProgram(prog);\r\n  if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\r\n    gl.getProgramInfoLog(prog);\r\n    return undefined;\r\n  }\r\n\r\n  // return the program\r\n  return prog;\r\n}\r\n\r\nexport function createProgramFromShaderSources(\r\n  gl: WebGL2RenderingContext,\r\n  vertex: string,\r\n  fragment: string\r\n): WebGLProgram | undefined {\r\n  // create shaders from sources\r\n  const maybeVShader = createShader(gl, vertex, gl.VERTEX_SHADER);\r\n  const maybeFShader = createShader(gl, fragment, gl.FRAGMENT_SHADER);\r\n  if (!maybeVShader || !maybeFShader) return undefined;\r\n\r\n  // compile the program and return the result of that\r\n  return createProgram(gl, maybeVShader, maybeFShader);\r\n}\r\n\r\nexport type UniformDimensionality = \"1\" | \"2\" | \"3\" | \"4\";\r\nexport type UDimToArray<N extends UniformDimensionality, T> = N extends \"1\"\r\n  ? [T]\r\n  : N extends \"2\"\r\n  ? [T, T]\r\n  : N extends \"3\"\r\n  ? [T, T, T]\r\n  : [T, T, T, T];\r\n\r\nexport function makeUniformSetter(\r\n  gl: WebGL2RenderingContext,\r\n  prog: WebGLProgram\r\n) {\r\n  return <N extends UniformDimensionality>(\r\n    type: `${N}${\"f\" | \"i\" | \"ui\"}`,\r\n    name: string,\r\n    ...data: UDimToArray<N, number>\r\n  ) => {\r\n    gl[\"uniform\" + type](gl.getUniformLocation(prog, name), ...data);\r\n  };\r\n}\r\n\r\nexport async function loadImage(link: string): Promise<HTMLImageElement> {\r\n  return new Promise((resolve, reject) => {\r\n    const image = new Image();\r\n    image.onload = () => {\r\n      resolve(image);\r\n    };\r\n    image.src = link;\r\n  });\r\n}\r\n\r\nexport const FULLSCREEN_QUAD = new Float32Array([\r\n  -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, -1, -1,\r\n]);\r\n", "export const LEVELS = [\r\n  {\r\n    bottomLeft: {\r\n      x: -0.302373124875951,\r\n      y: -1.0315392869672173,\r\n    },\r\n    topRight: {\r\n      x: 0.4567576185848055,\r\n      y: -0.2724085435064655,\r\n    },\r\n    fractalIndex: 1,\r\n    params: {\r\n      x: 0.2,\r\n      y: -0.6,\r\n    },\r\n  },\r\n  {\r\n    bottomLeft: {\r\n      x: -1.0808099909819329,\r\n      y: -0.5385742813352624,\r\n    },\r\n    topRight: {\r\n      x: -0.684866200062996,\r\n      y: -0.14263049041632594,\r\n    },\r\n    fractalIndex: 1,\r\n    params: {\r\n      x: 0.2,\r\n      y: -0.6,\r\n    },\r\n  },\r\n  {\r\n    bottomLeft: {\r\n      x: -1.2629528160529173,\r\n      y: 0.3745317849422254,\r\n    },\r\n    topRight: {\r\n      x: -1.2485148474591334,\r\n      y: 0.38896975353601,\r\n    },\r\n    fractalIndex: 1,\r\n    params: {\r\n      x: 0.2,\r\n      y: -0.6,\r\n    },\r\n  },\r\n  {\r\n    bottomLeft: {\r\n      x: 0.34708677390673875,\r\n      y: 0.5729895209222156,\r\n    },\r\n    topRight: {\r\n      x: 0.38386464665796144,\r\n      y: 0.6097673936734397,\r\n    },\r\n    fractalIndex: 1,\r\n    params: {\r\n      x: 0.2,\r\n      y: -0.6,\r\n    },\r\n  },\r\n  {\r\n    bottomLeft: {\r\n      x: -1.8667391911660034,\r\n      y: -0.0056043732637976965,\r\n    },\r\n    topRight: {\r\n      x: -1.8557129943785577,\r\n      y: 0.005421823523647911,\r\n    },\r\n    fractalIndex: 1,\r\n    params: {\r\n      x: 0.2,\r\n      y: -0.6,\r\n    },\r\n  },\r\n];\r\n\r\nexport type Level = (typeof LEVELS)[number];\r\n", "import {\r\n  createProgramFromShaderSources,\r\n  FULLSCREEN_QUAD,\r\n  makeUniformSetter,\r\n} from \"./gl-lib\";\r\nimport { Level, LEVELS } from \"./levels\";\r\n\r\nconst canvas: HTMLCanvasElement = document.getElementById(\r\n  \"canvas\"\r\n)! as HTMLCanvasElement;\r\n\r\nfunction resize() {\r\n  canvas.width = window.innerWidth;\r\n  canvas.height = window.innerHeight;\r\n  gl.viewport(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nwindow.addEventListener(\"resize\", resize);\r\n\r\nconst gl = canvas.getContext(\"webgl2\")!;\r\n\r\nresize();\r\n\r\nexport async function setupGL() {\r\n  gl.viewport(0, 0, canvas.width, canvas.height);\r\n\r\n  const vertexSource = await (await fetch(\"./fractal.vert\")).text();\r\n  const fragmentSource = await (await fetch(\"./fractal.frag\")).text();\r\n  const prog = createProgramFromShaderSources(gl, vertexSource, fragmentSource);\r\n  if (!prog) {\r\n    return;\r\n  }\r\n\r\n  const set = makeUniformSetter(gl, prog);\r\n\r\n  // setup vao\r\n  const vao = gl.createVertexArray();\r\n  gl.bindVertexArray(vao);\r\n\r\n  // setup quad buffer\r\n  const fullscreenQuadBuffer = gl.createBuffer();\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, fullscreenQuadBuffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, FULLSCREEN_QUAD, gl.STATIC_DRAW);\r\n\r\n  gl.useProgram(prog);\r\n\r\n  // per-vertex attribs\r\n  const vertexPositionLocation = gl.getAttribLocation(prog, \"vertex_position\");\r\n  gl.enableVertexAttribArray(vertexPositionLocation);\r\n  gl.vertexAttribPointer(vertexPositionLocation, 2, gl.FLOAT, false, 8, 0);\r\n\r\n  return set;\r\n}\r\n\r\nlet mousePos = { x: 0, y: 0 };\r\nlet mouseButtonsPressed = new Map<number, boolean>();\r\n\r\ndocument.addEventListener(\"mousemove\", (e) => {\r\n  mousePos = { x: e.clientX, y: e.clientY };\r\n});\r\n\r\ndocument.addEventListener(\"mousedown\", (e) => {\r\n  mouseButtonsPressed.set(e.button, true);\r\n});\r\n\r\ndocument.addEventListener(\"mouseup\", (e) => {\r\n  for (const btn of mouseButtonsPressed.keys())\r\n    mouseButtonsPressed.set(btn, false);\r\n});\r\n\r\nlet fine = false;\r\n\r\ndocument.addEventListener(\"keydown\", (e) => {\r\n  if (e.key.toLowerCase() === \"f\") fine = true;\r\n});\r\n\r\ndocument.addEventListener(\"keyup\", (e) => {\r\n  if (e.key.toLowerCase() === \"f\") fine = false;\r\n});\r\n\r\ncanvas.addEventListener(\"contextmenu\", (e) => {\r\n  e.preventDefault();\r\n  return false;\r\n});\r\n\r\nenum ScrollType {\r\n  Negative,\r\n  Positive,\r\n  None,\r\n}\r\n\r\nlet lastScrollPositive = ScrollType.None;\r\n\r\ndocument.addEventListener(\"wheel\", (e) => {\r\n  lastScrollPositive = e.deltaY > 0 ? ScrollType.Positive : ScrollType.Negative;\r\n});\r\n\r\nlet userBottomLeft = { x: -2, y: -2 };\r\nlet userTopRight = { x: 2, y: 2 };\r\nlet userParams = { x: 0.2, y: -0.6 };\r\nlet userTargetParams = { x: 0.2, y: -0.6 };\r\nlet scrollVel = 0;\r\nlet fractalIndex = 1;\r\nlet levelIndex = 0;\r\n\r\nlet targetBottomLeft = { x: 0, y: 0 };\r\nlet targetTopRight = { x: 0, y: 0 };\r\nlet targetParams = { x: 0, y: 0 };\r\n\r\nfunction lerp(a, b, x) {\r\n  return b * x + a * (1 - x);\r\n}\r\n\r\nfunction printParams() {\r\n  console.log({\r\n    bottomLeft: { ...userBottomLeft },\r\n    topRight: { ...userTopRight },\r\n    fractalIndex,\r\n    params: { ...userTargetParams },\r\n  });\r\n}\r\n\r\nconst fractalsMatched = document.getElementById(\"fractals-matched\")!;\r\n\r\nfunction loadLevel(level: Level) {\r\n  targetBottomLeft = { ...level.bottomLeft };\r\n  targetTopRight = { ...level.topRight };\r\n  targetParams = { ...level.params };\r\n  fractalsMatched.innerText = `Fractals Matched ${levelIndex}/${LEVELS.length}`;\r\n}\r\n\r\nloadLevel(LEVELS[0]);\r\n\r\n// @ts-expect-error this property doesn't exist\r\nwindow.printParams = printParams;\r\n\r\n(async () => {\r\n  const set = (await setupGL())!;\r\n\r\n  let prevMousePos = { x: 0, y: 0 };\r\n\r\n  function loop() {\r\n    const winDist = (userTopRight.x - userBottomLeft.x) / 50;\r\n    if (\r\n      Math.hypot(\r\n        targetTopRight.x - userTopRight.x,\r\n        targetTopRight.y - userTopRight.y\r\n      ) < winDist &&\r\n      Math.hypot(\r\n        targetBottomLeft.x - userBottomLeft.x,\r\n        targetTopRight.y - userTopRight.y\r\n      ) < winDist\r\n    ) {\r\n      levelIndex++;\r\n      loadLevel(LEVELS[levelIndex]);\r\n    }\r\n\r\n    if (mouseButtonsPressed.get(0)) {\r\n      let deltaX =\r\n        ((prevMousePos.x - mousePos.x) / window.innerHeight) *\r\n        (userTopRight.y - userBottomLeft.y);\r\n      let deltaY =\r\n        ((mousePos.y - prevMousePos.y) / window.innerHeight) *\r\n        (userTopRight.y - userBottomLeft.y);\r\n\r\n      userBottomLeft.x += deltaX;\r\n      userBottomLeft.y += deltaY;\r\n      userTopRight.x += deltaX;\r\n      userTopRight.y += deltaY;\r\n    }\r\n\r\n    if (mouseButtonsPressed.get(2)) {\r\n      userTargetParams.x = (mousePos.x / window.innerWidth) * 2 - 1;\r\n      userTargetParams.y = (mousePos.y / window.innerHeight) * 2 - 1;\r\n    }\r\n    userParams = {\r\n      x: lerp(userParams.x, userTargetParams.x, 0.3),\r\n      y: lerp(userParams.y, userTargetParams.y, 0.3),\r\n    };\r\n\r\n    if (lastScrollPositive === ScrollType.Positive) {\r\n      scrollVel += fine ? 0.005 : 0.06;\r\n    } else if (lastScrollPositive === ScrollType.Negative) {\r\n      scrollVel -= fine ? 0.005 : 0.06;\r\n    }\r\n    scrollVel *= 0.75;\r\n    lastScrollPositive = ScrollType.None;\r\n\r\n    const factor = scrollVel;\r\n\r\n    let originX = lerp(userBottomLeft.x, userTopRight.x, 0.5);\r\n    let originY = lerp(userBottomLeft.y, userTopRight.y, 0.5);\r\n\r\n    userBottomLeft.x = lerp(userBottomLeft.x, originX, factor);\r\n    userBottomLeft.y = lerp(userBottomLeft.y, originY, factor);\r\n\r\n    userTopRight.x = lerp(userTopRight.x, originX, factor);\r\n    userTopRight.y = lerp(userTopRight.y, originY, factor);\r\n\r\n    prevMousePos = mousePos;\r\n\r\n    // set uniforms to something sensible\r\n    set(\"2f\", \"target_params\", targetParams.x, targetParams.y);\r\n    set(\"2f\", \"target_bottom_left\", targetBottomLeft.x, targetBottomLeft.y);\r\n    set(\"2f\", \"target_top_right\", targetTopRight.x, targetTopRight.y);\r\n    set(\"2f\", \"user_params\", userParams.x, userParams.y);\r\n    set(\"2f\", \"user_bottom_left\", userBottomLeft.x, userBottomLeft.y);\r\n    set(\"2f\", \"user_top_right\", userTopRight.x, userTopRight.y);\r\n    set(\"1i\", \"fractal\", fractalIndex);\r\n    set(\"1f\", \"iterations\", 64);\r\n    set(\"2f\", \"resolution\", window.innerWidth, window.innerHeight);\r\n\r\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n    requestAnimationFrame(loop);\r\n  }\r\n\r\n  loop();\r\n})();\r\n"],
  "mappings": "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",
  "names": ["gl"]
}
